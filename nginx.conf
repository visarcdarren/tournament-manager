events {
    worker_connections 1024;
}

http {
    upstream tournament-manager {
        server tournament-manager:3001;
    }

    # Redirect HTTP to HTTPS (uncomment when SSL is configured)
    # server {
    #     listen 80;
    #     server_name your-domain.com;
    #     return 301 https://$server_name$request_uri;
    # }

    server {
        listen 80;
        # listen 443 ssl http2;
        server_name localhost;

        # SSL configuration (uncomment and configure when using HTTPS)
        # ssl_certificate /etc/nginx/certs/cert.pem;
        # ssl_certificate_key /etc/nginx/certs/key.pem;
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers HIGH:!aNULL:!MD5;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

        # API and SSE endpoints
        location /api {
            proxy_pass http://tournament-manager;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # For SSE
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 86400;
        }

        # Health check
        location /health {
            proxy_pass http://tournament-manager;
        }

        # Static files and client routing
        location / {
            proxy_pass http://tournament-manager;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
